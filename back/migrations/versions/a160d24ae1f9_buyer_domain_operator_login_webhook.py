"""buyer domain + operator/login/webhook

Revision ID: a160d24ae1f9
Revises: 93389dd1afed
Create Date: 2025-08-15 08:17:41.011585

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a160d24ae1f9'
down_revision = '93389dd1afed'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('buyer_users',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('full_name', sa.String(length=120), nullable=True),
    sa.Column('pin_hash', sa.String(length=128), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone')
    )
    with op.batch_alter_table('buyer_users', schema=None) as batch_op:
        batch_op.create_index('ix_buyer_users_active', ['is_active'], unique=False)

    op.create_table('webhook_events',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('direction', sa.String(length=3), nullable=False),
    sa.Column('provider', sa.String(length=40), nullable=True),
    sa.Column('event_type', sa.String(length=60), nullable=True),
    sa.Column('url', sa.String(length=255), nullable=True),
    sa.Column('headers', sa.JSON(), nullable=True),
    sa.Column('payload', sa.JSON(), nullable=True),
    sa.Column('status_code', sa.Integer(), nullable=True),
    sa.Column('attempts', sa.Integer(), nullable=False),
    sa.Column('next_retry_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('external_id', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('external_id')
    )
    with op.batch_alter_table('webhook_events', schema=None) as batch_op:
        batch_op.create_index('ix_webhook_events_created', ['created_at'], unique=False)
        batch_op.create_index('ix_webhook_events_provider', ['provider'], unique=False)

    op.create_table('buyer_devices',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('device_public_id', sa.String(length=64), nullable=False),
    sa.Column('platform', sa.Enum('ANDROID', 'IOS', 'WEB', name='platformenum'), nullable=False),
    sa.Column('model', sa.String(length=80), nullable=True),
    sa.Column('os_version', sa.String(length=40), nullable=True),
    sa.Column('is_trusted', sa.Boolean(), nullable=False),
    sa.Column('push_token', sa.String(length=256), nullable=True),
    sa.Column('registered_at', sa.DateTime(), nullable=False),
    sa.Column('last_seen_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['buyer_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'device_public_id', name='uq_buyer_device_per_user')
    )
    with op.batch_alter_table('buyer_devices', schema=None) as batch_op:
        batch_op.create_index('ix_buyer_devices_user', ['user_id'], unique=False)

    op.create_table('buyer_payment_cards',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('token_type', sa.Enum('VAULT', 'NETWORK', 'WALLET', name='cardtokentype'), nullable=False),
    sa.Column('vault_token_ref', sa.String(length=64), nullable=True),
    sa.Column('network_token_ref', sa.String(length=64), nullable=True),
    sa.Column('wallet_instrument_id', sa.String(length=64), nullable=True),
    sa.Column('brand', sa.String(length=20), nullable=True),
    sa.Column('last4', sa.String(length=4), nullable=True),
    sa.Column('exp_month', sa.SmallInteger(), nullable=True),
    sa.Column('exp_year', sa.SmallInteger(), nullable=True),
    sa.Column('issuer', sa.String(length=60), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', name='cardstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['buyer_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'network_token_ref', name='uq_card_network_ref_per_user'),
    sa.UniqueConstraint('user_id', 'vault_token_ref', name='uq_card_vault_ref_per_user'),
    sa.UniqueConstraint('user_id', 'wallet_instrument_id', name='uq_card_wallet_ref_per_user')
    )
    with op.batch_alter_table('buyer_payment_cards', schema=None) as batch_op:
        batch_op.create_index('ix_buyer_cards_user', ['user_id'], unique=False)

    op.create_table('operator_users',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('merchant_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['merchant_id'], ['merchants.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('merchant_id', 'email', name='uq_operator_email_per_merchant')
    )
    with op.batch_alter_table('operator_users', schema=None) as batch_op:
        batch_op.create_index('ix_operator_users_merchant', ['merchant_id'], unique=False)

    op.create_table('login_attempts',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('context', sa.String(length=12), nullable=False),
    sa.Column('buyer_user_id', sa.BigInteger(), nullable=True),
    sa.Column('operator_user_id', sa.BigInteger(), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.Column('reason', sa.String(length=60), nullable=True),
    sa.Column('ip', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['buyer_user_id'], ['buyer_users.id'], ),
    sa.ForeignKeyConstraint(['operator_user_id'], ['operator_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('login_attempts', schema=None) as batch_op:
        batch_op.create_index('ix_login_attempts_context', ['context'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('login_attempts', schema=None) as batch_op:
        batch_op.drop_index('ix_login_attempts_context')

    op.drop_table('login_attempts')
    with op.batch_alter_table('operator_users', schema=None) as batch_op:
        batch_op.drop_index('ix_operator_users_merchant')

    op.drop_table('operator_users')
    with op.batch_alter_table('buyer_payment_cards', schema=None) as batch_op:
        batch_op.drop_index('ix_buyer_cards_user')

    op.drop_table('buyer_payment_cards')
    with op.batch_alter_table('buyer_devices', schema=None) as batch_op:
        batch_op.drop_index('ix_buyer_devices_user')

    op.drop_table('buyer_devices')
    with op.batch_alter_table('webhook_events', schema=None) as batch_op:
        batch_op.drop_index('ix_webhook_events_provider')
        batch_op.drop_index('ix_webhook_events_created')

    op.drop_table('webhook_events')
    with op.batch_alter_table('buyer_users', schema=None) as batch_op:
        batch_op.drop_index('ix_buyer_users_active')

    op.drop_table('buyer_users')
    # ### end Alembic commands ###
