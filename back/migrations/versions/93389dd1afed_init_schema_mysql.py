"""init schema (mysql)

Revision ID: 93389dd1afed
Revises: 
Create Date: 2025-08-15 00:54:21.673745

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '93389dd1afed'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('merchants',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('legal_name', sa.String(length=120), nullable=False),
    sa.Column('nuit', sa.String(length=20), nullable=True),
    sa.Column('iban', sa.String(length=34), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('merchants', schema=None) as batch_op:
        batch_op.create_index('ix_merchants_status', ['status'], unique=False)

    op.create_table('pos_devices',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('merchant_id', sa.BigInteger(), nullable=False),
    sa.Column('public_id', sa.String(length=64), nullable=False),
    sa.Column('model', sa.String(length=80), nullable=True),
    sa.Column('platform', sa.Enum('ANDROID', 'IOS', 'WEB', name='platform'), nullable=False),
    sa.Column('nfc_supported', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('registered_at', sa.DateTime(), nullable=False),
    sa.Column('last_seen_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['merchant_id'], ['merchants.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    with op.batch_alter_table('pos_devices', schema=None) as batch_op:
        batch_op.create_index('ix_pos_devices_merchant', ['merchant_id'], unique=False)

    op.create_table('settlement_batches',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('merchant_id', sa.BigInteger(), nullable=False),
    sa.Column('business_date', sa.Date(), nullable=False),
    sa.Column('total_gross_cents', sa.BigInteger(), nullable=False),
    sa.Column('total_fees_cents', sa.BigInteger(), nullable=False),
    sa.Column('total_net_cents', sa.BigInteger(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['merchant_id'], ['merchants.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('merchant_id', 'business_date', name='uq_settlement_per_day')
    )
    op.create_table('payment_intents',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('merchant_id', sa.BigInteger(), nullable=False),
    sa.Column('pos_device_id', sa.BigInteger(), nullable=True),
    sa.Column('amount_cents', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('status', sa.Enum('OPEN', 'PARTIALLY_PAID', 'PAID', 'EXPIRED', 'CANCELLED', name='intentstatus'), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('emvco_payload', sa.Text(), nullable=False),
    sa.Column('ref', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['merchant_id'], ['merchants.id'], ),
    sa.ForeignKeyConstraint(['pos_device_id'], ['pos_devices.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ref')
    )
    with op.batch_alter_table('payment_intents', schema=None) as batch_op:
        batch_op.create_index('ix_intents_merchant_status', ['merchant_id', 'status'], unique=False)

    op.create_table('payments',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('intent_id', sa.BigInteger(), nullable=False),
    sa.Column('merchant_id', sa.BigInteger(), nullable=False),
    sa.Column('pos_device_id', sa.BigInteger(), nullable=True),
    sa.Column('method', sa.Enum('TAP', 'QR', name='paymentmethod'), nullable=False),
    sa.Column('amount_cents', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'DECLINED', 'REFUNDED', name='paymentstatus'), nullable=False),
    sa.Column('auth_code', sa.String(length=12), nullable=True),
    sa.Column('network_txn_id', sa.String(length=40), nullable=True),
    sa.Column('brand', sa.String(length=20), nullable=True),
    sa.Column('last4', sa.String(length=4), nullable=True),
    sa.Column('token_ref', sa.String(length=64), nullable=True),
    sa.Column('idempotency_key', sa.String(length=64), nullable=True),
    sa.Column('meta', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['intent_id'], ['payment_intents.id'], ),
    sa.ForeignKeyConstraint(['merchant_id'], ['merchants.id'], ),
    sa.ForeignKeyConstraint(['pos_device_id'], ['pos_devices.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('idempotency_key')
    )
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.create_index('ix_payments_merchant_status', ['merchant_id', 'status'], unique=False)

    op.create_table('payment_splits',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('intent_id', sa.BigInteger(), nullable=False),
    sa.Column('payment_id', sa.BigInteger(), nullable=True),
    sa.Column('amount_cents', sa.Integer(), nullable=False),
    sa.Column('sequence', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['intent_id'], ['payment_intents.id'], ),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction_events',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('payment_id', sa.BigInteger(), nullable=False),
    sa.Column('event_type', sa.String(length=40), nullable=False),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('transaction_events', schema=None) as batch_op:
        batch_op.create_index('ix_tx_events_payment', ['payment_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('transaction_events', schema=None) as batch_op:
        batch_op.drop_index('ix_tx_events_payment')

    op.drop_table('transaction_events')
    op.drop_table('payment_splits')
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.drop_index('ix_payments_merchant_status')

    op.drop_table('payments')
    with op.batch_alter_table('payment_intents', schema=None) as batch_op:
        batch_op.drop_index('ix_intents_merchant_status')

    op.drop_table('payment_intents')
    op.drop_table('settlement_batches')
    with op.batch_alter_table('pos_devices', schema=None) as batch_op:
        batch_op.drop_index('ix_pos_devices_merchant')

    op.drop_table('pos_devices')
    with op.batch_alter_table('merchants', schema=None) as batch_op:
        batch_op.drop_index('ix_merchants_status')

    op.drop_table('merchants')
    # ### end Alembic commands ###
